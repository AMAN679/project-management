{"version":3,"sources":["actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","e","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","onChange","setState","target","name","value","onSubmit","preventDefault","newProject","start_date","end_date","errors","nextProps","classNames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","updateProject","match","params","getProject","classnames","disabled","protoTypes","PropTypes","func","isRequired","object","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","AddProjectTask","newTasks","dueDate","addProjectTask","error","UpdateProjectTask","created_At","updateProjectTask","createdAt","getProjectTask","toString","split","patch","Landing","Register","newUser","username","password","confirmPassword","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","SecureRoute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66ff6fb2.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//TYPES FOR BACKLOG ACTION\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from './types';\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n    try {\r\n        await axios.post\r\n            (\"/api/project\", project);\r\n        history.push(\"/dashboard\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    const res = await axios.get(\"/api/project/all\")\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    })\r\n}\r\n\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/project/${id}`)\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        });\r\n    }\r\n    catch (error) {\r\n\r\n        history.push('/dashboard')\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n\r\n    if (window.confirm(\"Are you sure? This will delete the project.\")) {\r\n        await axios.delete(`/api/project/${id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: id\r\n        })\r\n    }\r\n\r\n\r\n\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteProject } from '../../actions/projectActions';\r\n\r\nclass ProjectItem extends Component {\r\n\r\n\r\n    onDeleteClick = (id) => {\r\n        this.props.deleteProject(id);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { project } = this.props;\r\n\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-4 col-8\">\r\n                            <h3>{project.projectName}</h3>\r\n                            <p>{project.description}</p>\r\n                        </div>\r\n                        <div className=\"col-md-4 d-none d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                                    <li className=\"list-group-item board\">\r\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                    <li className=\"list-group-item update\">\r\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                                    </li>\r\n                                </Link>\r\n\r\n                                <li className=\"list-group-item delete\" onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\r\n                                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                                </li>\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nconst CreateProjectButton = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"/addProject\"\r\n                className=\"btn btn-lg btn-info\">\r\n                Create a Project\r\n            </Link>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from 'react';\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Dashboard extends Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.getProjects();\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { projects } = this.props.project;\r\n\r\n        return (\r\n\r\n            <div className=\"projects\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <h1 className=\"display-4 text-center\">Projects</h1>\r\n                            <br />\r\n                            <CreateProjectButton />\r\n\r\n                            <br />\r\n                            <hr />\r\n\r\n                            {\r\n                                projects.map(project => (\r\n                                    <ProjectItem key={project.id} project={project} />\r\n                                ))\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n        project: state.project\r\n\r\n    }\r\n)\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token\r\n    }\r\n    else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n}\r\nexport default setJWTToken;","import axios from 'axios';\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\nimport setJWTToken from '../securityUtils/setJWTToken';\r\nimport jwt_decode from \"jwt-decode\"\r\n\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/users/register\", newUser)\r\n        history.push(\"/login\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n\r\n    try {\r\n\r\n        const res = await axios.post(\"/api/users/login\", LoginRequest)\r\n        const { token } = res.data;\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        //set token in header\r\n        setJWTToken(token)\r\n        //decode token\r\n\r\n        const decoded = jwt_decode(token);\r\n\r\n        //dispatch to securityReducer\r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decoded\r\n        })\r\n\r\n\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\")\r\n    setJWTToken(false)\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\"\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n\r\n\r\n    logout = e => {\r\n        this.props.logout();\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { validToken, user } = this.props.security\r\n        const userIsAuthenticated = (\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/dashboard\">\r\n                            Dashboard\r\n            </Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link \" to=\"/dashboard\">\r\n                            <i className=\"fas fa-user-circle mr-1\"> {user.fullName}</i>\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout}>\r\n                            Logout\r\n\r\n            </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n        const userIsNotAuthenticated = (\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n\r\n\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link \" to=\"/register\">\r\n                            Sign Up\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/login\">\r\n                            Login\r\n\r\n            </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n\r\n        let headerLinks;\r\n        if (validToken && user) {\r\n            headerLinks = userIsAuthenticated\r\n        }\r\n        else {\r\n            headerLinks = userIsNotAuthenticated;\r\n        }\r\n\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Personal Project Management Tool\r\n                </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                        <span className=\"navbar-toggler-icon\" />\r\n                    </button>\r\n                    {headerLinks}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nHeader.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);","import React, { Component } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\"\r\nimport { createProject } from \"../../actions/projectActions\"\r\nimport classNames from 'classnames';\r\n\r\n\r\nclass AddProject extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        const newProject = {\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date,\r\n        };\r\n\r\n        this.props.createProject(newProject, this.props.history)\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"project\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8 m-auto\">\r\n                                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                                <hr />\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\"\r\n                                            className={classNames(\"form-control form-control-lg \", {\r\n                                                \"is-invalid\": errors.projectName\r\n                                            })}\r\n                                            placeholder=\"Project Name\"\r\n                                            name=\"projectName\"\r\n                                            value={this.state.projectName}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        {errors.projectName && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.projectName}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className={classNames(\"form-control form-control-lg \", {\r\n                                            \"is-invalid\": errors.projectIdentifier\r\n                                        })}\r\n                                            placeholder=\"Unique Project ID\"\r\n                                            name=\"projectIdentifier\"\r\n                                            value={this.state.projectIdentifier}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                        {errors.projectIdentifier && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.projectIdentifier}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <textarea className={classNames(\"form-control form-control-lg \", {\r\n                                            \"is-invalid\": errors.description\r\n                                        })}\r\n                                            placeholder=\"Project Description\"\r\n                                            name=\"description\"\r\n                                            value={this.state.description}\r\n                                            onChange={this.onChange}\r\n                                        ></textarea>\r\n                                        {errors.description && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.description}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <h6>Start Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\"\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"start_date\"\r\n                                            value={this.state.start_date}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </div>\r\n                                    <h6>Estimated End Date</h6>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"date\"\r\n                                            className=\"form-control form-control-lg\"\r\n                                            name=\"end_date\"\r\n                                            value={this.state.end_date}\r\n                                            onChange={this.onChange}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n        errors: state.errors\r\n    }\r\n)\r\n\r\n\r\nAddProject.propTypes = {\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);","import { GET_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {};\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { GET_PROJECT, GET_PROJECTS, DELETE_PROJECT } from '../actions/types';\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            };\r\n\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case DELETE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter(project => project.projectIdentifier !== action.payload)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from '../actions/types'\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                project_tasks: action.payload\r\n            }\r\n\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_task: action.payload\r\n            }\r\n        case DELETE_PROJECT_TASK: {\r\n            return {\r\n                ...state,\r\n                project_tasks: state.project_tasks.\r\n                    filter(project_task => project_task.projectSequence !== action.payload)\r\n\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_CURRENT_USER } from \"../actions/types\"\r\n\r\n\r\nconst initialState = {\r\n    user: {},\r\n    validToken: false\r\n}\r\n\r\nconst booleanActionPayload = (payload) => {\r\n    if (payload) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                validToken: booleanActionPayload(action.payload),\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n\r\n    errors: errorReducer,\r\n    project: projectReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n\r\n});","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk]\r\n\r\nlet store\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store = createStore(rootReducer, initialState, compose\r\n        (applyMiddleware(...middleware),\r\n            ReactReduxDevTools\r\n\r\n        )\r\n    )\r\n}\r\nelse {\r\n    store = createStore(rootReducer, initialState, compose\r\n        (applyMiddleware(...middleware)));\r\n}\r\n\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport { getProject, createProject } from '../../actions/projectActions'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: \"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            })\r\n        }\r\n\r\n        const { id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date } = nextProps.project;\r\n        this.setState({\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        })\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n\r\n        const { id } = this.props.match.params;\r\n        this.props.getProject(id, this.props.history);\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const updateProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date\r\n        }\r\n        this.props.createProject(updateProject, this.props.history)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\",\r\n                                            {\r\n                                                \"is-invalid\": errors.projectName\r\n                                            })} placeholder=\"Project Name\"\r\n                                        name=\"projectName\"\r\n                                        value={this.state.projectName}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.projectName && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.projectName}\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\",\r\n                                        {\r\n                                            \"is-invalid\": errors.projectIdentifier\r\n                                        })}\r\n                                        placeholder=\"Unique Project ID\"\r\n                                        name=\"projectIdentifier\"\r\n                                        value={this.state.projectIdentifier}\r\n                                        onChange={this.onChange}\r\n\r\n                                        disabled />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea className={classnames(\"form-control form-control-lg\",\r\n                                        {\r\n                                            \"is-invalid\": errors.description\r\n                                        })}\r\n                                        placeholder=\"Project Description\"\r\n                                        name=\"description\"\r\n                                        value={this.state.description}\r\n                                        onChange={this.onChange}\r\n                                    ></textarea>\r\n                                    {\r\n                                        errors.description && (\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.description}\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n\r\n                                </div>\r\n                                <h6>Start Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\"\r\n                                        className=\"form-control form-control-lg\" name=\"start_date\"\r\n                                        value={this.state.start_date}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <h6>Estimated End Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\"\r\n                                        name=\"end_date\"\r\n                                        value={this.state.end_date}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProject.protoTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(UpdateProject);\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ProjectTask extends Component {\r\n\r\n    onDeleteClick = (backlog_id, pt_id) => {\r\n        this.props.deleteProjectTask(backlog_id, pt_id);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { project_task } = this.props;\r\n        let priorityString;\r\n        let priorityClass;\r\n\r\n        if (project_task.priority === 1) {\r\n            priorityClass = \"bg-danger text-light\";\r\n            priorityString = \"HIGH\"\r\n        }\r\n\r\n        if (project_task.priority === 2) {\r\n            priorityClass = \"bg-warning text-light\";\r\n            priorityString = \"MEDIUM\"\r\n        }\r\n\r\n\r\n        if (project_task.priority === 3) {\r\n            priorityClass = \"bg-info text-light\";\r\n            priorityString = \"LOW\"\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"card mb-1 bg-light \">\r\n\r\n                <div className={`card-header text-primary ${priorityClass}`}>\r\n                    ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n\r\n                </div>\r\n                <div className=\"card-body bg-light\">\r\n                    <h5 className=\"card-title\">{project_task.summary}</h5>\r\n                    <p className=\"card-text text-truncate \">\r\n                        {project_task.acceptanceCriteria}\r\n                    </p>\r\n                    <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n                        className=\"btn btn-primary\">\r\n                        View / Update\r\n                            </Link>\r\n\r\n                    <button className=\"btn btn-danger ml-4\"\r\n                        onClick={() => this.onDeleteClick(project_task.projectIdentifier, project_task.projectSequence)}>\r\n                        Delete\r\n                            </button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\";\r\nimport ProjectTask from \"../components/ProjectBoard/ProjectTasks/ProjectTask\";\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n    try {\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        })\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        })\r\n    }\r\n    catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`)\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        })\r\n    } catch (error) {\r\n        history.push(\"/dashboard\")\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n\r\n    try {\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task)\r\n        history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n\r\n    if (window.confirm(`You are deleting project task ${pt_id}, this action cannot be undone`)) {\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask'\r\n\r\nclass Backlog extends Component {\r\n    render() {\r\n        const { project_tasks_prop } = this.props\r\n        const tasks = project_tasks_prop.map(project_task => (\r\n            <ProjectTask key={project_task.id} project_task={project_task} />\r\n        ))\r\n\r\n        let todoItems = [];\r\n        let inProgressItems = [];\r\n        let doneItems = [];\r\n\r\n        for (let i = 0; i < tasks.length; i++) {\r\n            if (tasks[i].props.project_task.status === \"TO_DO\")\r\n                todoItems.push(tasks[i]);\r\n            else if (tasks[i].props.project_task.status === \"IN_PROGRESS\")\r\n                inProgressItems.push(tasks[i]);\r\n            else if (tasks[i].props.project_task.status === \"DONE\")\r\n                doneItems.push(tasks[i]);\r\n\r\n        }\r\n\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-secondary text-white\">\r\n                                <h3>TO DO</h3>\r\n                            </div>\r\n                        </div>\r\n                        {todoItems}\r\n\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-primary text-white\">\r\n                                <h3>In Progress</h3>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            inProgressItems\r\n\r\n                        }\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"card text-center mb-2\">\r\n                            <div className=\"card-header bg-success text-white\">\r\n                                <h3>Done</h3>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            doneItems\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport Backlog from './Backlog';\r\nimport { connect } from \"react-redux\"\r\nimport PropTypes from \"prop-types\"\r\nimport { getBacklog } from \"../../actions/backlogActions\"\r\n\r\n\r\nclass ProjectBoard extends Component {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            errors: {}\r\n        };\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        this.props.getBacklog(id);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { id } = this.props.match.params;\r\n        const { project_tasks } = this.props.backlog;\r\n        const { errors } = this.state\r\n        let BoardContent;\r\n        const boardAlgorithm = (errors, project_tasks) => {\r\n\r\n            if (project_tasks.length < 1) {\r\n                if (errors.projectNotFound) {\r\n\r\n                    return (<div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                        {errors.projectNotFound}\r\n                    </div>);\r\n\r\n\r\n                }\r\n                else if (errors.projectIdentifier) {\r\n\r\n                    return (<div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                        {errors.projectIdentifier}\r\n                    </div>);\r\n\r\n\r\n                }\r\n\r\n                else {\r\n                    return (<div className=\"alert alert-info text-center\" role=\"alert\">\r\n                        No Project Tasks on this board\r\n                    </div>);\r\n                }\r\n            }\r\n            else {\r\n                return <Backlog project_tasks_prop={project_tasks} />\r\n            }\r\n\r\n        }\r\n\r\n        BoardContent = boardAlgorithm(errors, project_tasks)\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n                </Link>\r\n                <br />\r\n                <hr />\r\n\r\n                {BoardContent}\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    backlog: state.backlog,\r\n    errors: state.errors\r\n})\r\n\r\nProjectBoard.propTypes = {\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklog: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const { id } = this.props.match.params\r\n        this.state = {\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: \"\",\r\n            projectIdentifier: id,\r\n            error: {}\r\n\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n    }\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        const newTasks = {\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n\r\n        }\r\n\r\n        this.props.addProjectTask(this.state.projectIdentifier, newTasks, this.props.history);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { id } = this.props.match.params;\r\n        const { errors } = this.props\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                        </Link>\r\n                            <h4 className=\"display-4 text-center\">Add /Update Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.summary\r\n                                        })}\r\n                                        name=\"summary\"\r\n                                        value={this.state.summary}\r\n                                        placeholder=\"Project Task summary\"\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.summary && (\r\n                                            <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <textarea className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Acceptance Criteria\"\r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}\r\n                                    ></textarea>\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        name=\"dueDate\"\r\n                                        value={this.state.dueDate}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\"\r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\"\r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => (\r\n    {\r\n        errors: state.errors\r\n    }\r\n)\r\n\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { getProjectTask, updateProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: \"\",\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: \"\",\r\n            dueDate: \"\",\r\n            projectIdentifier: \"\",\r\n            createdAt: \"\",\r\n            errors: {}\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { backlog_id, pt_id } = this.props.match.params\r\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history)\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n\r\n        const { id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            createdAt } = nextProps.project_task;\r\n        this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate: dueDate.toString().split('T')[0],\r\n            projectIdentifier,\r\n            createdAt\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        const UpdateProjectTask = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n\r\n            dueDate: this.state.dueDate,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            created_At: this.state.created_At\r\n\r\n        }\r\n        // console.log(UpdateProjectTask);\r\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence,\r\n            UpdateProjectTask, this.props.history)\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                        </Link>\r\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name: {this.state.projectIdentifier} +\r\n                             Project Task ID: {this.state.projectSequence}</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.summary\r\n                                    })}\r\n                                        name=\"summary\"\r\n                                        value={this.state.summary}\r\n                                        onChange={this.onChange}\r\n                                        placeholder=\"Project Task summary\" />\r\n                                    {errors.summary && (\r\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Acceptance Criteria\"\r\n                                        name=\"acceptanceCriteria\"\r\n                                        value={this.state.acceptanceCriteria}\r\n                                        onChange={this.onChange}\r\n                                    ></textarea>\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\"\r\n                                        name=\"dueDate\"\r\n                                        value={this.state.dueDate}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\"\r\n                                        name=\"priority\"\r\n                                        value={this.state.priority}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\"\r\n                                        name=\"status\"\r\n                                        value={this.state.status}\r\n                                        onChange={this.onChange}\r\n                                    >\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n})\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(UpdateProjectTask)\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nclass Landing extends Component {\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n                <div className=\"light-overlay landing-inner text-dark\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12 text-center\">\r\n                                <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                                <p className=\"lead\">\r\n                                    Create your account to join active projects or start your own\r\n                            </p>\r\n                                <hr />\r\n                                <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                                    Sign Up\r\n                            </Link>\r\n                                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                                    Login\r\n                            </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from 'react'\r\nimport { createNewUser } from \"../../actions/securityActions\"\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\"\r\nimport classnames from \"classnames\";\r\n\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            fullName: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errors: {}\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            fullName: this.state.fullName,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n        }\r\n\r\n        this.props.createNewUser(newUser, this.props.history);\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n\r\n\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.fullName\r\n                                        })}\r\n                                        placeholder=\"Full Name\" name=\"fullName\"\r\n\r\n                                        value={this.state.fullName}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n\r\n                                    {\r\n                                        errors.fullName && (\r\n                                            <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.username\r\n                                    })}\r\n                                        placeholder=\"Email Address\" name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {errors.username && (\r\n                                        <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                    )\r\n                                    }\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.password\r\n                                    })}\r\n                                        placeholder=\"Password\" name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.password && (\r\n                                            <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                        )\r\n                                    }\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.confirmPassword\r\n                                    })}\r\n                                        placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\"\r\n                                        value={this.state.confirmPassword}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.confirmPassword && (\r\n                                            <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\"\r\n\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            errors: {}\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.security.validToken) {\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const LoginRequest = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n\r\n        this.props.login(LoginRequest);\r\n    }\r\n\r\n\r\n\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\"\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.username\r\n                                        })}\r\n                                        placeholder=\"Email Address\" name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.username && (<div className=\"invalid-feedback\">\r\n                                            {errors.username}\r\n                                        </div>)\r\n                                    }\r\n\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\"\r\n\r\n                                        className={classnames(\"form-control form-control-lg\", {\r\n                                            \"is-invalid\": errors.password\r\n                                        })}\r\n                                        placeholder=\"Password\" name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    {\r\n                                        errors.password && (<div className=\"invalid-feedback\">\r\n                                            {errors.password}\r\n                                        </div>)\r\n                                    }\r\n\r\n\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, { Component } from 'react'\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n    <Route {...otherProps} render={props => security.validToken === true ?\r\n        (<Component {...props} />) : (<Redirect to=\"login\" />)} />\r\n\r\n\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute);","\nimport './App.css';\nimport React, { Component } from 'react';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AddProject from './components/Project/AddProject';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\"\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecureRoute from \"./securityUtils/SecureRoute\"\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout())\n    window.location.href = \"/\"\n  }\n}\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            <Switch>\n              <SecureRoute exact path=\"/dashboard\" component={Dashboard}></SecureRoute>\n              <SecureRoute exact path=\"/addProject\" component={AddProject}></SecureRoute>\n              <SecureRoute exact path=\"/updateProject/:id\" component={UpdateProject}></SecureRoute>\n              <SecureRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n              <SecureRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n              <SecureRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n            </Switch>\n\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}